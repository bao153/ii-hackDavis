{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createClassNames, translatable } from 'react-instantsearch-dom';\nimport GeoSearchContext from './GeoSearchContext';\nimport withGoogleMaps from './withGoogleMaps';\nvar cx = createClassNames('GeoSearch');\nvar ControlPropTypes = {\n  googleMapsInstance: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired\n};\nexport var Control = function Control(_ref) {\n  var googleMapsInstance = _ref.googleMapsInstance,\n      translate = _ref.translate,\n      isRefineOnMapMove = _ref.isRefineOnMapMove,\n      hasMapMoveSinceLastRefine = _ref.hasMapMoveSinceLastRefine,\n      toggleRefineOnMapMove = _ref.toggleRefineOnMapMove,\n      refineWithInstance = _ref.refineWithInstance;\n  return React.createElement(\"div\", {\n    className: cx('control')\n  }, isRefineOnMapMove || !hasMapMoveSinceLastRefine ? React.createElement(\"label\", {\n    className: cx('label')\n  }, React.createElement(\"input\", {\n    className: cx('input'),\n    type: \"checkbox\",\n    checked: isRefineOnMapMove,\n    onChange: toggleRefineOnMapMove\n  }), translate('control')) : React.createElement(\"button\", {\n    className: cx('redo'),\n    onClick: function onClick() {\n      return refineWithInstance(googleMapsInstance);\n    }\n  }, translate('redo')));\n};\nControl.propTypes = _objectSpread({}, ControlPropTypes, {\n  isRefineOnMapMove: PropTypes.bool.isRequired,\n  toggleRefineOnMapMove: PropTypes.func.isRequired,\n  hasMapMoveSinceLastRefine: PropTypes.bool.isRequired,\n  refineWithInstance: PropTypes.func.isRequired\n});\n\nvar ControlWrapper = function ControlWrapper(props) {\n  return React.createElement(GeoSearchContext.Consumer, null, function (_ref2) {\n    var isRefineOnMapMove = _ref2.isRefineOnMapMove,\n        hasMapMoveSinceLastRefine = _ref2.hasMapMoveSinceLastRefine,\n        toggleRefineOnMapMove = _ref2.toggleRefineOnMapMove,\n        refineWithInstance = _ref2.refineWithInstance;\n    return React.createElement(Control, _extends({}, props, {\n      isRefineOnMapMove: isRefineOnMapMove,\n      hasMapMoveSinceLastRefine: hasMapMoveSinceLastRefine,\n      toggleRefineOnMapMove: toggleRefineOnMapMove,\n      refineWithInstance: refineWithInstance\n    }));\n  });\n};\n\nControlWrapper.propTypes = ControlPropTypes;\nexport default translatable({\n  control: 'Search as I move the map',\n  redo: 'Redo search here'\n})(withGoogleMaps(ControlWrapper));","map":{"version":3,"sources":["/Users/michellehu/ii-react/client/node_modules/react-instantsearch-dom-maps/dist/es/Control.js"],"names":["_extends","_objectSpread","React","PropTypes","createClassNames","translatable","GeoSearchContext","withGoogleMaps","cx","ControlPropTypes","googleMapsInstance","object","isRequired","translate","func","Control","_ref","isRefineOnMapMove","hasMapMoveSinceLastRefine","toggleRefineOnMapMove","refineWithInstance","createElement","className","type","checked","onChange","onClick","propTypes","bool","ControlWrapper","props","Consumer","_ref2","control","redo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createClassNames, translatable } from 'react-instantsearch-dom';\nimport GeoSearchContext from './GeoSearchContext';\nimport withGoogleMaps from './withGoogleMaps';\nvar cx = createClassNames('GeoSearch');\nvar ControlPropTypes = {\n  googleMapsInstance: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired\n};\nexport var Control = function Control(_ref) {\n  var googleMapsInstance = _ref.googleMapsInstance,\n      translate = _ref.translate,\n      isRefineOnMapMove = _ref.isRefineOnMapMove,\n      hasMapMoveSinceLastRefine = _ref.hasMapMoveSinceLastRefine,\n      toggleRefineOnMapMove = _ref.toggleRefineOnMapMove,\n      refineWithInstance = _ref.refineWithInstance;\n  return React.createElement(\"div\", {\n    className: cx('control')\n  }, isRefineOnMapMove || !hasMapMoveSinceLastRefine ? React.createElement(\"label\", {\n    className: cx('label')\n  }, React.createElement(\"input\", {\n    className: cx('input'),\n    type: \"checkbox\",\n    checked: isRefineOnMapMove,\n    onChange: toggleRefineOnMapMove\n  }), translate('control')) : React.createElement(\"button\", {\n    className: cx('redo'),\n    onClick: function onClick() {\n      return refineWithInstance(googleMapsInstance);\n    }\n  }, translate('redo')));\n};\nControl.propTypes = _objectSpread({}, ControlPropTypes, {\n  isRefineOnMapMove: PropTypes.bool.isRequired,\n  toggleRefineOnMapMove: PropTypes.func.isRequired,\n  hasMapMoveSinceLastRefine: PropTypes.bool.isRequired,\n  refineWithInstance: PropTypes.func.isRequired\n});\n\nvar ControlWrapper = function ControlWrapper(props) {\n  return React.createElement(GeoSearchContext.Consumer, null, function (_ref2) {\n    var isRefineOnMapMove = _ref2.isRefineOnMapMove,\n        hasMapMoveSinceLastRefine = _ref2.hasMapMoveSinceLastRefine,\n        toggleRefineOnMapMove = _ref2.toggleRefineOnMapMove,\n        refineWithInstance = _ref2.refineWithInstance;\n    return React.createElement(Control, _extends({}, props, {\n      isRefineOnMapMove: isRefineOnMapMove,\n      hasMapMoveSinceLastRefine: hasMapMoveSinceLastRefine,\n      toggleRefineOnMapMove: toggleRefineOnMapMove,\n      refineWithInstance: refineWithInstance\n    }));\n  });\n};\n\nControlWrapper.propTypes = ControlPropTypes;\nexport default translatable({\n  control: 'Search as I move the map',\n  redo: 'Redo search here'\n})(withGoogleMaps(ControlWrapper));"]},"metadata":{},"sourceType":"module"}