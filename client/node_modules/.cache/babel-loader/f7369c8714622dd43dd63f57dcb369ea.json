{"ast":null,"code":"import _classCallCheck from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/michellehu/ii-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import classes from'./AdminPage.module.css';import CertificationCard from'../../components/AdminPage/CertificationCard/CertificationCard';import EventCard from'../../components/AdminPage/EventCard/EventCard';import Button from'../../components/shared/Button/Button';import EventModal from'../../components/AdminPage/EventModal/EventModal';import{fetchData}from'../../services/AdminService';var AdminPage=/*#__PURE__*/function(_Component){_inherits(AdminPage,_Component);function AdminPage(){var _this;_classCallCheck(this,AdminPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(AdminPage).call(this));_this.loadData=function(){fetchData().then(function(data){_this.setState({pastEvents:data.pastEvents,upcomingEvents:data.upcomingEvents,interpreters:data.toValidate});}).catch(function(error){console.log(error);});};_this.state={pastEvents:[],upcomingEvents:[],interpreters:[]};_this.loadData=_this.loadData.bind(_assertThisInitialized(_this));return _this;}_createClass(AdminPage,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadData();}},{key:\"render\",value:function render(){var _this2=this;var toValidateCertificates=this.state.interpreters.map(function(interpreter){return interpreter.unvalidatedCertificates.map(function(certificate){return React.createElement(CertificationCard,{key:\"\".concat(certificate.id),id:certificate.id,avatar:interpreter.avatar,name:interpreter.name,title:certificate.title,location:interpreter.location,certificateImage:certificate.image});});});var pastEvents=this.state.pastEvents.map(function(event){return React.createElement(EventCard,{id:event.id,key:\"event-\".concat(event.id),title:event.title,date:event.date,location:event.location,summary:event.summary,image:event.image,past:true,reloadData:_this2.loadData});});var upcomingEvents=this.state.upcomingEvents.map(function(event){return React.createElement(EventCard,{id:event.id,key:\"event-\".concat(event.id),title:event.title,date:event.date,location:event.location,summary:event.summary,image:event.image,reloadData:_this2.loadData});});return React.createElement(\"div\",{className:classes.Container},React.createElement(\"div\",{className:classes.title},\"Upcoming Events\"),upcomingEvents.length?upcomingEvents:React.createElement(\"div\",{className:classes.noEvents},\"There Is No Event Coming Up.\"),React.createElement(\"div\",{className:classes.title},\"Past Events\"),pastEvents.length?pastEvents:React.createElement(\"div\",{className:classes.noEvents},\"There Is No Past Event To Show.\"),React.createElement(\"div\",{className:classes.buttons},React.createElement(Button,{content:\"Manage All Events\",inverted:true}),React.createElement(EventModal,{reloadData:this.loadData})),React.createElement(\"div\",{className:classes.horzLine}),React.createElement(\"div\",{className:classes.title},\"New Certification Uploads\"),toValidateCertificates);}}]);return AdminPage;}(Component);export default AdminPage;","map":{"version":3,"sources":["/Users/michellehu/ii-react/client/src/containers/AdminPage/AdminPage.js"],"names":["React","Component","classes","CertificationCard","EventCard","Button","EventModal","fetchData","AdminPage","loadData","then","data","setState","pastEvents","upcomingEvents","interpreters","toValidate","catch","error","console","log","state","bind","toValidateCertificates","map","interpreter","unvalidatedCertificates","certificate","id","avatar","name","title","location","image","event","date","summary","Container","length","noEvents","buttons","horzLine"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './AdminPage.module.css'\n\nimport CertificationCard from '../../components/AdminPage/CertificationCard/CertificationCard';\nimport EventCard from '../../components/AdminPage/EventCard/EventCard';\nimport Button from '../../components/shared/Button/Button';\nimport EventModal from '../../components/AdminPage/EventModal/EventModal';\n\nimport { fetchData } from '../../services/AdminService';\n\nclass AdminPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pastEvents: [],\n            upcomingEvents: [],\n            interpreters: []\n        }\n\n        this.loadData = this.loadData.bind(this);\n    }\n\n    loadData = () => {\n        fetchData()\n            .then(data => {\n                this.setState({\n                    pastEvents: data.pastEvents,\n                    upcomingEvents: data.upcomingEvents,\n                    interpreters: data.toValidate\n                })\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    render() {\n        const toValidateCertificates = this.state.interpreters.map(interpreter => (\n            interpreter.unvalidatedCertificates.map(certificate => (\n                <CertificationCard key={`${certificate.id}`}\n                    id={certificate.id}\n                    avatar={interpreter.avatar}\n                    name={interpreter.name}\n                    title={certificate.title}\n                    location={interpreter.location}\n                    certificateImage={certificate.image} />\n            ))\n        ))\n        const pastEvents = this.state.pastEvents.map(event => {\n            return <EventCard id={event.id}\n                key={`event-${event.id}`}\n                title={event.title}\n                date={event.date}\n                location={event.location}\n                summary={event.summary}\n                image={event.image}\n                past\n                reloadData={this.loadData} />\n        })\n        const upcomingEvents = this.state.upcomingEvents.map(event => {\n            return <EventCard id={event.id}\n                key={`event-${event.id}`}\n                title={event.title}\n                date={event.date}\n                location={event.location}\n                summary={event.summary}\n                image={event.image}\n                reloadData={this.loadData} />\n        })\n\n        return (\n            <div className={classes.Container}>\n                <div className={classes.title}>Upcoming Events</div>\n                {upcomingEvents.length ? upcomingEvents : <div className={classes.noEvents}>There Is No Event Coming Up.</div>}\n\n                <div className={classes.title}>Past Events</div>\n                {pastEvents.length ? pastEvents : <div className={classes.noEvents}>There Is No Past Event To Show.</div>}\n\n                <div className={classes.buttons}>\n                    <Button content='Manage All Events' inverted />\n                    <EventModal reloadData={this.loadData} />\n                </div>\n\n                <div className={classes.horzLine} />\n\n                <div className={classes.title}>New Certification Uploads</div>\n\n                {toValidateCertificates}\n            </div >\n        )\n    }\n}\n\nexport default AdminPage;\n\n"]},"metadata":{},"sourceType":"module"}